ads_queueexpr vlax-queueexpr lisp版本的没用

;;;下面的是干嘛？
vrtlib-find-start
vrtlib-fsl-load
vrtlib-fsl-update
vrtlib-get
vrtlib-id-string
vrtlib-list
vrtlib-replace

;;;警告信息和警告的format版本
warn
warning
warning-fmt  
_msg-err
_msg-warn
err_str_stream
error
error-fmt
error-message

;;;这几个load有毛用？
*load-all-mode*
*load-dll-filename*
*load-dll-hook*
*load-filename*
*load-from-fsl*
*load-path*
*load-print*
DllGetClassObject
Get-Obj-From-Dll

;;;这里有hook?hook相关
_%ads-cmd-error-hook%
_%ads-dlg-cb-hook%
_%ads-dlg-handle%
_%ads-dlg-info%
_%symbol-assign-hook%
_%sys-break-hook%
_%sys-error-hook%
_%sys-top-hook%
_%RTCAN-hook%
_call-err-hook
eval-hook
hook-apply
hook-expand
hts-the-hook
sys-acmd-err-hook
sys-rtcan-hook
*al-defun-hook*
AL-DEFUN-HOOK-PROC
al-defun-hook-proc
ADSi-REGFUN-HOOK
end-session-hook
deftype-hook
illegal-function-hook
kbd-close-paren-hook
load-stream-hook
load-dll-hook
*multigui-dwg-close-hook*
*null-function-hook*
*require-hook*
*symbol-redefinition-hook*
*the-hook*
*xsubr-trace-hook*
_lisplet-error-hook

;;;地址操作
_addr-of
_addr<   ;居然是判断地址大小的
_byte@
_byte@<-
_word@
_word@<-
_ptr@
_ptr@<-
_lobyte
_loword
_hibyte
_hiword

;;;文件操作
_file-filename
_file-id
_file-mode
_fsl-resource-load
_fsl-resource-size  ;fsl是什么？

file
file-absolute-name
file-copy
file-delete
file-directory-p
file-mod-time
file-read-only-p
file-readable-p
file-rename
file-size
file-time-vector   ;时间信息
file-time-vector<-
file-touch
file>ostream
fileList
filename-absolute-p
filename-base
filename-beautify
filename-directory
filename-directory!
filename-extension
filename-mktemp
filename-non-directory
filename-non-extension
filep

;;;把焦点放在命令上？
_get-focus-on-command

;;;获取模块句柄和文件名
_get-module-file-name   
_get-module-handle

_get-profile-int
_get-profile-string
_get-windows-directory
_getting-command-p

_splitpath
_$ (_splitpath "c:\\windows\\system32\\1.log")
("c:" "\\windows\\system32\\" "1" ".log")

;;;还能修改函数名?
_subr-name
_subr-name<-

;;;这个应该是acedInvoke?
ads-invoke
;;;和princ有区别？
ads-printf


AL-init-subr-name

alert-dialog
alert-info

;;字符有关
char
char-alt-bit
char-bits
char-bits-limit
char-code
char-code-limit
char-control-bit
char-downcase
char-font
char-font-limit
char-name
char-prin1
char-prin1-to-string
char-shift-bit
char-type
char-upcase
char-virtkey-bit
char<-

;;;dll相关
Get-Obj-From-Dll
load-dll
_run-dll

;;;module 感觉很有用，但又不知道用法
module
module-append
module-code-byte
module-code-byte<-
module-code-dword
module-code-dword<-
module-code-length
module-code-string
module-code-word
module-code-word<-
module-length
module-lit-elt
module-lit-elt<-
module-lit-length
module-lit-vector
module-sis-p
module-write
ModuleName
modulep

movd ;两个符号？
_$ (setq c 1231245)
1231245
_$ (setq b 12)
12
_$ (movd 'c 'b)
; 用户警告: ' B ' Redefined by movd
1231245

printf
_$ (printf "asdsg~A~A" 1 2)
asdsg12nil

